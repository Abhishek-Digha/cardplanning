{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Downloads\\\\story-pointing-app\\\\frontend\\\\src\\\\components\\\\AdminControls.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSession } from '../contexts/SessionContext';\nimport { sessionAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminControls() {\n  _s();\n  const [customNumber, setCustomNumber] = React.useState(\"\");\n  const [updating, setUpdating] = React.useState(false);\n  const {\n    session,\n    user,\n    activeStory,\n    isRevealed,\n    dispatch,\n    votes,\n    voteCount,\n    totalMembers\n  } = useSession();\n  // Calculate vote count and total members for the current active story\n\n  // Prevent rendering if required data is missing\n  if (!session || !user || !activeStory) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        var _updatedSession$stori;\n        await sessionAPI.revealVotes(session.id, activeStory.id, user.id);\n        // Fetch updated session to get revealed state and votes\n        const updatedSession = await sessionAPI.getSession(session.id);\n        // Update votes and isRevealed in context\n        dispatch({\n          type: 'SET',\n          payload: {\n            votes: ((_updatedSession$stori = updatedSession.stories.find(s => s.id === activeStory.id)) === null || _updatedSession$stori === void 0 ? void 0 : _updatedSession$stori.votes) || {},\n            isRevealed: true\n          }\n        });\n      },\n      disabled: isRevealed,\n      style: {\n        padding: '10px 24px',\n        background: isRevealed ? '#a3a3a3' : '#1976d2',\n        color: '#fff',\n        border: 'none',\n        borderRadius: 4,\n        cursor: isRevealed ? 'not-allowed' : 'pointer',\n        fontWeight: 'bold',\n        fontSize: 18,\n        marginTop: '1.2rem',\n        marginBottom: '0.5rem',\n        boxShadow: '0 1px 4px rgba(25,118,210,0.08)'\n      },\n      children: isRevealed ? 'Revealed' : 'Reveal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isRevealed && (user === null || user === void 0 ? void 0 : user.isAdmin) && activeStory && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 18,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customNumber,\n        onChange: e => setCustomNumber(e.target.value),\n        placeholder: \"Set Card Number\",\n        style: {\n          padding: '6px 12px',\n          fontSize: '1rem',\n          borderRadius: 4,\n          border: '1px solid #ccc',\n          width: 120\n        },\n        min: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          setUpdating(true);\n          // Assume sessionAPI.updateStoryNumber(sessionId, storyId, newNumber) exists\n          await sessionAPI.updateStoryNumber(session.id, activeStory.id, customNumber);\n          // Refresh session data\n          const updatedSession = await sessionAPI.getSession(session.id);\n          const updatedStory = updatedSession.stories.find(s => s.id === activeStory.id);\n          dispatch({\n            type: 'SET',\n            payload: {\n              stories: updatedSession.stories,\n              activeStory: updatedStory\n            }\n          });\n          setUpdating(false);\n        },\n        disabled: updating || !customNumber,\n        style: {\n          padding: '6px 16px',\n          background: '#6366f1',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 4,\n          fontWeight: 600,\n          cursor: updating ? 'not-allowed' : 'pointer'\n        },\n        children: updating ? 'Updating...' : 'Update Card Number'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminControls, \"I1eyL/NL18pGLkQYrpNCBJDtOFs=\", false, function () {\n  return [useSession];\n});\n_c = AdminControls;\nvar _c;\n$RefreshReg$(_c, \"AdminControls\");","map":{"version":3,"names":["React","useSession","sessionAPI","jsxDEV","_jsxDEV","AdminControls","_s","customNumber","setCustomNumber","useState","updating","setUpdating","session","user","activeStory","isRevealed","dispatch","votes","voteCount","totalMembers","className","children","onClick","_updatedSession$stori","revealVotes","id","updatedSession","getSession","type","payload","stories","find","s","disabled","style","padding","background","color","border","borderRadius","cursor","fontWeight","fontSize","marginTop","marginBottom","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","display","alignItems","gap","value","onChange","e","target","placeholder","width","min","updateStoryNumber","updatedStory","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Downloads/story-pointing-app/frontend/src/components/AdminControls.js"],"sourcesContent":["import React from 'react';\r\nimport { useSession } from '../contexts/SessionContext';\r\nimport { sessionAPI } from '../utils/api';\r\nexport default function AdminControls(){\r\n  const [customNumber, setCustomNumber] = React.useState(\"\");\r\n  const [updating, setUpdating] = React.useState(false);\r\n  const {session,user,activeStory,isRevealed,dispatch,votes,voteCount,totalMembers} = useSession();\r\n  // Calculate vote count and total members for the current active story\r\n\r\n  // Prevent rendering if required data is missing\r\n  if (!session || !user || !activeStory) return null;\r\n\r\n  return (\r\n    <div className=\"admin-controls\">\r\n      <button\r\n        onClick={async ()=>{\r\n          await sessionAPI.revealVotes(session.id,activeStory.id,user.id);\r\n          // Fetch updated session to get revealed state and votes\r\n          const updatedSession = await sessionAPI.getSession(session.id);\r\n          // Update votes and isRevealed in context\r\n          dispatch({type:'SET',payload:{votes: updatedSession.stories.find(s=>s.id===activeStory.id)?.votes || {}, isRevealed: true}});\r\n        }}\r\n        disabled={isRevealed}\r\n        style={{\r\n          padding:'10px 24px',\r\n          background: isRevealed ? '#a3a3a3' : '#1976d2',\r\n          color:'#fff',\r\n          border:'none',\r\n          borderRadius:4,\r\n          cursor: isRevealed ? 'not-allowed' : 'pointer',\r\n          fontWeight:'bold',\r\n          fontSize:18,\r\n          marginTop:'1.2rem',\r\n          marginBottom:'0.5rem',\r\n          boxShadow:'0 1px 4px rgba(25,118,210,0.08)'\r\n        }}\r\n      >\r\n        {isRevealed ? 'Revealed' : 'Reveal'}\r\n      </button>\r\n      {/* Admin custom number update after reveal */}\r\n      {isRevealed && user?.isAdmin && activeStory && (\r\n        <div style={{marginBottom: 18, display:'flex', alignItems:'center', gap:8}}>\r\n          <input\r\n            type=\"number\"\r\n            value={customNumber}\r\n            onChange={e => setCustomNumber(e.target.value)}\r\n            placeholder=\"Set Card Number\"\r\n            style={{padding:'6px 12px', fontSize:'1rem', borderRadius:4, border:'1px solid #ccc', width:120}}\r\n            min={0}\r\n          />\r\n          <button\r\n            onClick={async () => {\r\n              setUpdating(true);\r\n              // Assume sessionAPI.updateStoryNumber(sessionId, storyId, newNumber) exists\r\n              await sessionAPI.updateStoryNumber(session.id, activeStory.id, customNumber);\r\n              // Refresh session data\r\n              const updatedSession = await sessionAPI.getSession(session.id);\r\n              const updatedStory = updatedSession.stories.find(s => s.id === activeStory.id);\r\n              dispatch({type:'SET', payload: { stories: updatedSession.stories, activeStory: updatedStory }});\r\n              setUpdating(false);\r\n            }}\r\n            disabled={updating || !customNumber}\r\n            style={{padding:'6px 16px', background:'#6366f1', color:'#fff', border:'none', borderRadius:4, fontWeight:600, cursor: updating ? 'not-allowed' : 'pointer'}}\r\n          >\r\n            {updating ? 'Updating...' : 'Update Card Number'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}