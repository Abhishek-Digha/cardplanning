{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Downloads\\\\story-pointing-app\\\\frontend\\\\src\\\\contexts\\\\SessionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { sessionAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionContext = /*#__PURE__*/createContext();\nconst initialState = {\n  session: null,\n  user: null,\n  socket: null,\n  stories: [],\n  activeStory: null,\n  votes: {},\n  voteCount: 0,\n  totalMembers: 0,\n  isRevealed: false\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET':\n      return {\n        ...state,\n        ...action.payload\n      };\n    case 'ADD_MEMBER':\n      return {\n        ...state,\n        session: {\n          ...state.session,\n          members: [...state.session.members, action.payload]\n        }\n      };\n    case 'ADD_STORY':\n      return {\n        ...state,\n        stories: [...state.stories, action.payload]\n      };\n    case 'SET_ACTIVE':\n      return {\n        ...state,\n        activeStory: action.payload\n      };\n    case 'SET_VOTE_COUNT':\n      return {\n        ...state,\n        voteCount: action.payload.voteCount,\n        totalMembers: action.payload.totalMembers\n      };\n    case 'SET_VOTES':\n      return {\n        ...state,\n        votes: action.payload\n      };\n    case 'SET_REVEALED':\n      return {\n        ...state,\n        isRevealed: action.payload\n      };\n    case 'CLEAR_VOTES':\n      return {\n        ...state,\n        votes: {},\n        voteCount: 0,\n        isRevealed: false\n      };\n    default:\n      return state;\n  }\n}\nexport function SessionProvider({\n  children\n}) {\n  _s();\n  var _state$session;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const sessionIdRef = useRef(null);\n  sessionIdRef.current = (_state$session = state.session) === null || _state$session === void 0 ? void 0 : _state$session.id;\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n    dispatch({\n      type: 'SET',\n      payload: {\n        socket\n      }\n    });\n    socket.on('memberJoined', async () => {\n      if (sessionIdRef.current) {\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\n        dispatch({\n          type: 'SET',\n          payload: {\n            session: updatedSession,\n            stories: updatedSession.stories\n          }\n        });\n      }\n    });\n    socket.on('storyCreated', async () => {\n      if (sessionIdRef.current) {\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\n        const newActiveStory = updatedSession.stories.find(s => s.id === updatedSession.activeStoryId) || null;\n        dispatch({\n          type: 'SET',\n          payload: {\n            session: updatedSession,\n            stories: updatedSession.stories,\n            activeStory: newActiveStory,\n            votes: {},\n            isRevealed: false\n          }\n        });\n      }\n    });\n    socket.on('activeStoryChanged', async id => {\n      if (sessionIdRef.current) {\n        var _newActiveStory$voteC;\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\n        const newActiveStory = updatedSession.stories.find(s => s.id === id) || null;\n        dispatch({\n          type: 'SET',\n          payload: {\n            session: updatedSession,\n            stories: updatedSession.stories,\n            activeStory: newActiveStory,\n            votes: (newActiveStory === null || newActiveStory === void 0 ? void 0 : newActiveStory.votes) || {},\n            voteCount: (_newActiveStory$voteC = newActiveStory === null || newActiveStory === void 0 ? void 0 : newActiveStory.voteCount) !== null && _newActiveStory$voteC !== void 0 ? _newActiveStory$voteC : state.voteCount,\n            isRevealed: (newActiveStory === null || newActiveStory === void 0 ? void 0 : newActiveStory.isRevealed) || false\n          }\n        });\n      }\n    });\n    socket.on('voteCountChanged', data => {\n      dispatch({\n        type: 'SET_VOTE_COUNT',\n        payload: data\n      });\n    });\n    socket.on('votesRevealed', data => {\n      dispatch({\n        type: 'SET_VOTES',\n        payload: data.votes\n      });\n      dispatch({\n        type: 'SET_REVEALED',\n        payload: true\n      });\n    });\n    socket.on('votesCleared', () => {\n      dispatch({\n        type: 'CLEAR_VOTES'\n      });\n    });\n    return () => socket.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(SessionProvider, \"Pgz1L/7i03p6HU79hT0C3nopsWE=\");\n_c = SessionProvider;\nexport function useSession() {\n  _s2();\n  return useContext(SessionContext);\n}\n_s2(useSession, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useRef","io","sessionAPI","jsxDEV","_jsxDEV","SessionContext","initialState","session","user","socket","stories","activeStory","votes","voteCount","totalMembers","isRevealed","reducer","state","action","type","payload","members","SessionProvider","children","_s","_state$session","dispatch","sessionIdRef","current","id","on","updatedSession","getSession","newActiveStory","find","s","activeStoryId","_newActiveStory$voteC","data","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSession","_s2","$RefreshReg$"],"sources":["C:/Users/abhis/Downloads/story-pointing-app/frontend/src/contexts/SessionContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { sessionAPI } from '../utils/api';\r\n\r\nconst SessionContext = createContext();\r\nconst initialState = {\r\n  session:null, user:null, socket:null,\r\n  stories:[], activeStory:null,\r\n  votes:{}, voteCount:0, totalMembers:0,\r\n  isRevealed:false\r\n};\r\n\r\nfunction reducer(state,action){\r\n  switch(action.type){\r\n    case 'SET': return {...state,...action.payload};\r\n    case 'ADD_MEMBER': return {\r\n      ...state,\r\n      session:{...state.session,members:[...state.session.members,action.payload]}\r\n    };\r\n    case 'ADD_STORY':\r\n      return {...state,stories:[...state.stories,action.payload]};\r\n    case 'SET_ACTIVE': return {...state,activeStory:action.payload};\r\n    case 'SET_VOTE_COUNT':\r\n      return {...state,voteCount:action.payload.voteCount,totalMembers:action.payload.totalMembers};\r\n    case 'SET_VOTES': return {...state,votes:action.payload};\r\n    case 'SET_REVEALED': return {...state,isRevealed:action.payload};\r\n    case 'CLEAR_VOTES':\r\n      return {...state,votes:{},voteCount:0,isRevealed:false};\r\n    default: return state;\r\n  }\r\n}\r\n\r\n\r\n  export function SessionProvider({ children }) {\r\n    const [state,dispatch] = useReducer(reducer,initialState);\r\n  const sessionIdRef = useRef(null);\r\n  sessionIdRef.current = state.session?.id;\r\n\r\n  useEffect(()=>{\r\n    const socket = io('http://localhost:5000');\r\n    dispatch({type:'SET',payload:{socket}});\r\n\r\n    socket.on('memberJoined',async()=>{\r\n      if(sessionIdRef.current) {\r\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\r\n        dispatch({type:'SET',payload:{session: updatedSession, stories: updatedSession.stories}});\r\n      }\r\n    });\r\n    socket.on('storyCreated',async()=>{\r\n      if(sessionIdRef.current) {\r\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\r\n        const newActiveStory = updatedSession.stories.find(s=>s.id===updatedSession.activeStoryId) || null;\r\n        dispatch({type:'SET',payload:{\r\n          session: updatedSession,\r\n          stories: updatedSession.stories,\r\n          activeStory: newActiveStory,\r\n          votes: {},\r\n          isRevealed: false\r\n        }});\r\n      }\r\n    });\r\n    socket.on('activeStoryChanged',async id=>{\r\n      if(sessionIdRef.current) {\r\n        const updatedSession = await sessionAPI.getSession(sessionIdRef.current);\r\n        const newActiveStory = updatedSession.stories.find(s=>s.id===id) || null;\r\n        dispatch({\r\n          type: 'SET',\r\n          payload: {\r\n            session: updatedSession,\r\n            stories: updatedSession.stories,\r\n            activeStory: newActiveStory,\r\n            votes: newActiveStory?.votes || {},\r\n            voteCount: newActiveStory?.voteCount ?? state.voteCount,\r\n            isRevealed: newActiveStory?.isRevealed || false\r\n          }\r\n        });\r\n      }\r\n    });\r\n    socket.on('voteCountChanged',data=>{\r\n      dispatch({type:'SET_VOTE_COUNT',payload:data});\r\n    });\r\n    socket.on('votesRevealed',data=>{\r\n      dispatch({type:'SET_VOTES',payload:data.votes});\r\n      dispatch({type:'SET_REVEALED',payload:true});\r\n    });\r\n    socket.on('votesCleared',()=>{\r\n      dispatch({type:'CLEAR_VOTES'});\r\n    });\r\n\r\n    return ()=>socket.disconnect();\r\n  },[]);\r\n\r\n  return (\r\n    <SessionContext.Provider value={{...state,dispatch}}>\r\n      {children}\r\n\r\n    </SessionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSession(){\r\n  return useContext(SessionContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}