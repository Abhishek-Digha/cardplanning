{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Downloads\\\\story-pointing-app\\\\frontend\\\\src\\\\components\\\\AdminControls.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSession } from '../contexts/SessionContext';\nimport { sessionAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminControls() {\n  _s();\n  var _session$members, _session$members2;\n  const [customNumber, setCustomNumber] = React.useState(\"\");\n  const [updating, setUpdating] = React.useState(false);\n  const {\n    session,\n    user,\n    activeStory,\n    isRevealed,\n    dispatch,\n    votes,\n    voteCount,\n    totalMembers\n  } = useSession();\n  // Calculate vote count and total members for the current active story\n\n  // Prevent rendering if required data is missing\n  if (!session || !user || !activeStory) return null;\n\n  // Calculate vote status for each member\n  const memberCount = (session === null || session === void 0 ? void 0 : (_session$members = session.members) === null || _session$members === void 0 ? void 0 : _session$members.length) || 0;\n  const submittedCount = (session === null || session === void 0 ? void 0 : (_session$members2 = session.members) === null || _session$members2 === void 0 ? void 0 : _session$members2.filter(m => votes && votes[m.id] !== undefined).length) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          var _updatedSession$stori;\n          await sessionAPI.revealVotes(session.id, activeStory.id, user.id);\n          // Fetch updated session to get revealed state and votes\n          const updatedSession = await sessionAPI.getSession(session.id);\n          // Update votes and isRevealed in context\n          dispatch({\n            type: 'SET',\n            payload: {\n              votes: ((_updatedSession$stori = updatedSession.stories.find(s => s.id === activeStory.id)) === null || _updatedSession$stori === void 0 ? void 0 : _updatedSession$stori.votes) || {},\n              isRevealed: true\n            }\n          });\n        },\n        disabled: isRevealed,\n        style: {\n          padding: '10px 24px',\n          background: isRevealed ? '#a3a3a3' : '#1976d2',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 4,\n          cursor: isRevealed ? 'not-allowed' : 'pointer',\n          fontWeight: 'bold',\n          fontSize: 18,\n          marginTop: '1.2rem',\n          marginBottom: '0.5rem',\n          boxShadow: '0 1px 4px rgba(25,118,210,0.08)'\n        },\n        children: isRevealed ? 'Revealed' : 'Reveal'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminControls, \"I1eyL/NL18pGLkQYrpNCBJDtOFs=\", false, function () {\n  return [useSession];\n});\n_c = AdminControls;\nvar _c;\n$RefreshReg$(_c, \"AdminControls\");","map":{"version":3,"names":["React","useSession","sessionAPI","jsxDEV","_jsxDEV","AdminControls","_s","_session$members","_session$members2","customNumber","setCustomNumber","useState","updating","setUpdating","session","user","activeStory","isRevealed","dispatch","votes","voteCount","totalMembers","memberCount","members","length","submittedCount","filter","m","id","undefined","children","style","display","justifyContent","onClick","_updatedSession$stori","revealVotes","updatedSession","getSession","type","payload","stories","find","s","disabled","padding","background","color","border","borderRadius","cursor","fontWeight","fontSize","marginTop","marginBottom","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Downloads/story-pointing-app/frontend/src/components/AdminControls.js"],"sourcesContent":["import React from 'react';\r\nimport { useSession } from '../contexts/SessionContext';\r\nimport { sessionAPI } from '../utils/api';\r\nexport default function AdminControls(){\r\n  const [customNumber, setCustomNumber] = React.useState(\"\");\r\n  const [updating, setUpdating] = React.useState(false);\r\n  const {session,user,activeStory,isRevealed,dispatch,votes,voteCount,totalMembers} = useSession();\r\n  // Calculate vote count and total members for the current active story\r\n\r\n  // Prevent rendering if required data is missing\r\n  if (!session || !user || !activeStory) return null;\r\n\r\n  // Calculate vote status for each member\r\n  const memberCount = session?.members?.length || 0;\r\n  const submittedCount = session?.members?.filter(m => votes && votes[m.id] !== undefined).length || 0;\r\n\r\n  return (\r\n    <div>\r\n      {/* ...existing voting status table and other UI here... */}\r\n      <div style={{display:'flex', justifyContent:'center'}}>\r\n        <button\r\n          onClick={async ()=>{\r\n            await sessionAPI.revealVotes(session.id,activeStory.id,user.id);\r\n            // Fetch updated session to get revealed state and votes\r\n            const updatedSession = await sessionAPI.getSession(session.id);\r\n            // Update votes and isRevealed in context\r\n            dispatch({type:'SET',payload:{votes: updatedSession.stories.find(s=>s.id===activeStory.id)?.votes || {}, isRevealed: true}});\r\n          }}\r\n          disabled={isRevealed}\r\n          style={{\r\n            padding:'10px 24px',\r\n            background: isRevealed ? '#a3a3a3' : '#1976d2',\r\n            color:'#fff',\r\n            border:'none',\r\n            borderRadius:4,\r\n            cursor: isRevealed ? 'not-allowed' : 'pointer',\r\n            fontWeight:'bold',\r\n            fontSize:18,\r\n            marginTop:'1.2rem',\r\n            marginBottom:'0.5rem',\r\n            boxShadow:'0 1px 4px rgba(25,118,210,0.08)'\r\n          }}\r\n        >\r\n          {isRevealed ? 'Revealed' : 'Reveal'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}